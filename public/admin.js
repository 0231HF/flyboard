'use strict';/************************** services modlue *****************************/var services = angular.module('services', [    'ngResource']);services.service('DataSource', function($resource){    return $resource('/api/data_sources/:id', null, {            'update': {method: 'PUT'}        });});services.service('Project', function($resource){    return $resource('/api/projects/:id');});services.service('Widget', function($resource){    return $resource('/api/dashboards/:dashboardid/widgets/:id', null, {        'update': {method: 'PUT'}    });});services.service('Dashboard', function($resource){    return $resource('/api/dashboards/:id');});services.service('RecordSave', function($resource){    return $resource('/api/projects/:uuid/data_sources/:key');});services.service('Record', function($resource){    return $resource('/api/data_sources/:id/records');});services.service('RecordDelete', function($resource){    return $resource('/api/records/:id');});/************************** App modlue *****************************/var adminApp = angular.module('adminApp', [    'ngRoute',    'dataSourceControllers',    'dashboardControllers',    'widgetControllers',    'services']);adminApp.config(['$routeProvider',function($routeProvider){    $routeProvider.        //dataSource        when('/dataSource', {            templateUrl:'/public/src/dataSource.html',            controllers: 'dataSourceCtrl'        }).        when('/dataSource/edit/:dataSourceId', {            templateUrl: '/public/src/dataSource_edit.html'        }).        when('/dataSource/new', {            templateUrl: '/public/src/dataSource_new.html',            controllers:'dataSourceNew'        }).        when('/dataSource/delete/:dataSourceId', {            controllers: 'dataSourceDelete'        }).        //widget        when('/dashboard/:dashboardId/widget/edit/:id', {            templateUrl: '/public/src/widget_edit.html',            controllers: 'widgetEdit'        }).        //dashboard        when('/dashboard', {            templateUrl: '/public/src/dashboard.html',            controllers: 'dashboardCtrl'        }).        when('/dashboard/edit/:dashboardId', {            templateUrl: '/public/src/dashboard_edit.html',            controllers: 'dashboardEdit'        }).        otherwise({        });}]);adminApp.controller('dataSourceCtrl', ['$scope', 'DataSource', 'Project',    function($scope, DataSource, Project){        DataSource.query().$promise.then(function(dataSources){            dataSources.forEach(function(dataSource){                Project.get({id: dataSource.project_id}).$promise.then(function(project){                    dataSource.project_uuid = project.uuid;                });            });            $scope.dataSources = dataSources;            $scope.delete = function(dataSource){                DataSource.delete({                    id: dataSource.id                }).$promise.then(function () {                    var idx = $scope.dataSources.indexOf(dataSource);                    if (idx === -1) {                        return;                    }                    $scope.dataSources.splice(idx, 1);                });            };        });    }]);adminApp.controller('dashboardCtrl', ['$scope', 'Dashboard', 'Widget',    function($scope, Dashboard, Widget){        Dashboard.query().$promise.then(function(dashboards) {            $scope.dashboards = dashboards;            $scope.dashboards.forEach(function(dashboard){                Widget.query({dashboardid: dashboard.id}).$promise.then(function (widgets) {                    dashboard.widgets = widgets;                });            });        });    }]);adminApp.controller('widgetCtrl', ['$scope', 'Widget', 'Dashboard', 'DataSource',    function($scope, Widget, Dashboard, DataSource){        Dashboard.query().$promise.then(function(dashboards){            $scope.widgets = [];            dashboards.forEach(function(dashboard){                Widget.query({dashboardid: dashboard.id}).$promise.then(function(widgets){                    $scope.widgets.push(widgets);                });            });        });    }]);adminApp.controller('NavCtrl', function ($scope, $rootScope) {    $scope.active = 'dashboard';    $rootScope.$on('$routeChangeSuccess', function(current, routes){        if(routes.loadedTemplateUrl === '/public/src/dataSource.html' || routes.loadedTemplateUrl === '/public/src/dataSource_edit.html'){            $scope.active = 'dataSource';        }//        else if(routes.loadedTemplateUrl === '/public/src/widget.html'){//            $scope.active = 'widget';//        }        else if(routes.loadedTemplateUrl === '/public/src/dashboard.html'){            $scope.active = 'dashboard';        }    });});/************************** dataSource Controllers *****************************/var dataSourceControllers = angular.module('dataSourceControllers', [    'services']);dataSourceControllers.controller('dataSourceInfo', ['$scope', '$routeParams', 'DataSource', 'Project',    function($scope, $routeParams, DataSource, Project) {        DataSource.get({id: $routeParams.dataSourceId}).$promise.then(function(dataSource){            $scope.dataSource = dataSource;        });        Project.query().$promise.then(function(projects){            $scope.projects = projects;        });        $scope.invalid = {};        $scope.submit = function () {            //验证表单数据是否合法            var valid = true;            if (!$scope.dataSource.name) {                $scope.invalid.name = 'ng-invalid ng-dirty';                valid = false;            }            if (!$scope.dataSource.project_id) {                $scope.invalid.project_id = 'ng-invalid ng-dirty';                valid = false;            }            if (!$scope.dataSource.key) {                $scope.invalid.key = 'ng-invalid ng-dirty';                valid = false;            }            if (!valid) {                return;            }            //提交后给出成功操作的提示            DataSource.update({id: $scope.dataSource.id}, $scope.dataSource);        };    }]);dataSourceControllers.controller('dataSourceMethod', ['$scope', '$routeParams', 'Project', 'DataSource',    function ($scope, $routeParams, Project, DataSource) {        DataSource.get({id: $routeParams.dataSourceId}).$promise.then(function (ds) {            $scope.project = Project.get({                id: ds.project_id            });        });        $scope.showJsonExample = JSON.stringify({            value: 100,            year: 2014,            month: 7,            day: 3,            hour: 16,            minute: 0,            second: 0        }, null, 4);        $scope.dataSource = DataSource.get({id: $routeParams.dataSourceId});    }]);dataSourceControllers.controller('dataSourceTest', ['$rootScope', '$scope', '$routeParams', 'RecordSave', 'Project', 'DataSource',    function($rootScope, $scope, $routeParams, RecordSave, Project, DataSource){        $scope.data = JSON.stringify({            value: 100,            year: 2014,            month: 7,            day: 3,            hour: 16,            minute: 0,            second: 0        }, null, 4);        DataSource.get({id: $routeParams.dataSourceId}).$promise.then(function (ds) {            $scope.dataSource = ds;            $scope.project = Project.get({                id: ds.project_id            });        });        $scope.submit = function(){            var data = JSON.parse($scope.data);            RecordSave.save({                uuid: $scope.project.uuid,                key: $scope.dataSource.key            }, data).$promise.then(function (record) {                $rootScope.$broadcast('newRecord', record);            });        };    }]);dataSourceControllers.controller('dataSourceRecords', ['$rootScope', '$scope', '$routeParams', 'Record', 'DataSource', 'RecordDelete',    function($rootScope, $scope, $routeParams, Record, DataSource, RecordDelete){        $scope.records = Record.query({            id: $routeParams.dataSourceId,            orderBy: 'created_at',            limit: 10        });        $scope.getDataSource = function(id){            return DataSource.get({                id: id            });        };        $scope.delete = function (record) {            //删除Record后刷新Record List            RecordDelete.delete({                id: record.id            }).$promise.then(function () {                var idx = $scope.records.indexOf(record);                if (idx === -1) {                    return;                }                $scope.records.splice(idx, 1);            });        };        $rootScope.$on('newRecord', function (event, record) {            $scope.records.unshift(record);        });    }]);dataSourceControllers.controller('dataSourceNew', ['$scope', 'DataSource', 'Project',    function($scope, DataSource, Project) {            $scope.projects = Project.query();            $scope.dataSource = {};            $scope.invalid = {};            $scope.submit = function () {                //验证表单数据是否合法                var valid = true;                if($scope.dataSource.name === undefined){                    $scope.invalid.name = 'ng-invalid ng-dirty';                    valid = false;                }                if($scope.dataSource.project_id === undefined){                    $scope.invalid.project_id = 'ng-invalid ng-dirty';                    valid = false;                }                if($scope.dataSource.key === undefined){                    $scope.invalid.key = 'ng-invalid ng-dirty';                    valid = false;                }                if(!valid){                    return ;                }                //提交后给出成功操作的提示                DataSource.save(null, $scope.dataSource).$promise.then(function(dataSource){                    location.href = '#dataSource/edit/' + dataSource.id;                });            };        }]);/************************** widget Controllers *****************************/var widgetControllers = angular.module('widgetControllers', [    'ngResource',    'services']);widgetControllers.controller('widgetEdit', ['$scope', '$routeParams', 'Widget', 'DataSource',    function($scope, $routeParams, Widget, DataSource){        Widget.get({            dashboardid: $routeParams.dashboardId,            id: $routeParams.id        }).$promise.then(function(widget){                $scope.widget = widget;                $scope.widget.config.sum = $scope.widget.config.sum || 'false';                //根据不同的widget类型，显示不同的表单                switch($scope.widget.type){                    case 1: $scope.type = 'Number'; break;                    default: $scope.type = undefined;                }                DataSource.query().$promise.then(function(dataSources){                    $scope.dataSources = dataSources;                });        });        $scope.invalid = {};        $scope.submit = function(){            var valid = true;            //需要验证的通用表单选项            if (!$scope.widget.type) {                $scope.invalid.type = 'ng-invalid ng-dirty';                valid = false;            }            if(!$scope.widget.config.name){                $scope.invalid.name = 'ng-invalid ng-dirty';                valid = false;            }            if(!$scope.widget.config.sum){                $scope.invalid.sum = 'ng-invalid ng-dirty';                valid = false;            }            if(!$scope.widget.config.reloadInterval){                $scope.invalid.load_interval = 'ng-invalid ng-dirty';                valid = false;            }            if(!$scope.widget.config.limit){                $scope.invalid.limit = 'ng-invalid ng-dirty';                valid = false;            }            //根据widget的不同类型，验证相应的表单选项            switch($scope.widget.type){                case 1:                    if(!$scope.widget.config.dataSourceId){                        $scope.invalid.number_data_source = 'ng-invalid ng-dirty';                        valid = false;                    }                    break;                default:                    break;            }            if(!valid){                return ;            }            Widget.update({                dashboardid: $routeParams.dashboardId,                id: $scope.widget.id            }, $scope.widget);        };    }]);/************************** dashboard Controllers *****************************/var dashboardControllers = angular.module('dashboardControllers', [    'ngResource',    'services']);