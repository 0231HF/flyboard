/* * variables and functions shared */'use strict';var slideInterval = 60000;Highcharts.setOptions({    global: {        useUTC: false    }});//default colors used in widgetsvar defaultColors = ['rgb(47,179,202)', 'rgb(241, 86, 79)', 'rgb(246,150,84)', 'rgb(252,238,33)', 'rgb(124,188,30)'];//format Date: xx年xx月xx日 xx:xx:xfunction formatDate (date) {    function formatTimeElement(timeElement){        return (timeElement.toString().length === 1)? '0'+ timeElement: timeElement;    }    return '' + date.getFullYear() + '-' + formatTimeElement(( date.getMonth() + 1 )) + '-' + formatTimeElement(date.getDate()) + '    '+ formatTimeElement(date.getHours()) + ':' + formatTimeElement(date.getMinutes()) + ':' + formatTimeElement(date.getSeconds());}function getTimeFromRecord(record) {    return new Date(record.year, record.month - 1, record.day, record.hour, record.minute, record.second).getTime();}/* sort multiRecords -- record order : newest record first *  opts: { *      formatDate: func, *      invalidValue: '--' *  } */function sortMultiRecords(multiRecords, opts) {    var sortedMultiRecords = [];    var stopFlag = false;    var pointers = [];    multiRecords.forEach(function (records, idx) {        pointers[idx] = 0;        sortedMultiRecords[idx] = [];    });    /*jshint loopfunc:true*/    while (!stopFlag) {        var max = null;        var newRecords = [];        multiRecords.forEach(function (records, idx) {            var pointer = pointers[idx];            if (pointer >= records.length) {                return;            }            var time = new Date(records[pointer].date_time).getTime();            if (max === null || max < time) {                max = time;                newRecords = [idx];            }            else if (max === time) {                newRecords.push(idx);            }        });        if (max === null) {            stopFlag = true;            continue;        }        multiRecords.forEach(function (records, idx) {            if (newRecords.indexOf(idx) === -1) {                sortedMultiRecords[idx].push({                    time: (opts && opts.formatDate) ? opts.formatDate(new Date(max)) : new Date(max),                    value: (opts && opts.invalidValue)? opts.invalidValue : 0                });            }            else {                sortedMultiRecords[idx].push({                    time: (opts && opts.formatDate) ? opts.formatDate(new Date(max)) : new Date(max),                    value: records[pointers[idx]].value                });                pointers[idx] = pointers[idx] + 1;            }        });    }    return sortedMultiRecords;}